on: 
  schedule:
    - cron: '33 6 * * *'


jobs:
  windows_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2019 ]
    name: bisweb-test
    steps:
    - name: Environment Setup
      run: |
        python --version
        echo "----------------------------------------------------"
        echo "git = `which git` `git --version`"
        echo "python = `which python` `python --version`"
        echo "python = `which python3` `python3 --version`"
        echo "node = `which node` `node --version`"
        echo "----------------------------------------------------"
        pwd
      shell: bash
    - name: Create Temp Directory
      run: |
        mkdir /d/tmp
        cd /d/tmp
      shell: bash
    - name: Clone Source Code
      run: |
        mkdir -p /d/tmp/bisweb/src
        cd /d/tmp/bisweb
        git clone https://github.com/bioimagesuiteweb/bisweb src
        cd src
        git checkout devel
        git pull
        cp npm-shrinkwrap-orig.json npm-shrinkwrap.json
      shell: bash
    - name: Clone GPL Plugin
      run: |
        cd /d/tmp/bisweb
        mkdir -p /d/tmp/bisweb/gpl
        git clone https://github.com/bioimagesuiteweb/gplcppcode gpl
        cd gpl
        git pull
      shell: bash
    - name: Install VS 2017
      run: |
        choco install visualstudio2017buildtools
        choco install visualstudio2017-workload-vctools
      shell: cmd
    - name: Global Prereq
      run : |
        npm install -g mocha rimraf2
        python -m pip install --upgrade pip setuptools
        python -m pip install numpy nibabel
      shell: bash
    - name : Python Prereqs
      run: |
        cd /d/tmp/bisweb/src
        python -m pip install --user -r biswebpython/config/requirements.txt
      shell: bash
    - name : JS Prereqs
      run: |
        cd /d/tmp/bisweb/src
        npm install -d
      shell: bash
    - name : Install Emscrpten
      run: |
        cd /d/tmp/bisweb/src
        node config/createbuild.js
        chmod +x /d/tmp/bisweb/src/compiletools/*.sh    
      shell: bash
    - name: "Build"
      run: |
        c:
        call C:\"Program Files (x86)"\"Microsoft Visual Studio"\2017\\BuildTools\VC\Auxiliary\Build\vcvarsall.bat x64
        d:
        bash.exe d:\\tmp\\bisweb\\src\\compiletools\\fullbuild.sh
      shell: cmd
    - name : Test
      run : bash /d/tmp/bisweb/src/actions/hosted/dockeractiontest.sh /d/tmp 1 1000
      id: run    
      shell: bash
    - name: Results
      run: echo "${{ steps.run.outputs.result}}"
      shell: bash
    - name: Store Results
      uses: actions/upload-artifact@v1
      with:
        name: logs
        path: d:/tmp/bisweb/src/build/output/logs
    - name: Store Libraries
      uses: actions/upload-artifact@v1
      with:
        name: libraries
        path: d:/tmp/bisweb/src/build/output/libraries
